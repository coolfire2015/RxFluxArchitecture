apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.github.dcendents.android-maven'

group = "com.github.coolfire2015"

android {
    //编译版本
    compileSdkVersion COMPILE_SDK_VERSION as int
    //默认配置
    defaultConfig {
        //Sdk版本
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        //版本信息
        versionCode rootProject.gitGitVersionCode()
        versionName rootProject.getGitVersionName()
    }
    //构建过程
    buildTypes {
        //自定义buildType.name
        release {
            //混淆开关
            minifyEnabled false
            //混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //Lambda表达式需要
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//将源代码打包进aar
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.javaDirectories
}

artifacts {
    archives sourcesJar
}

dependencies {
    //内核
    implementation project(':core_arch')
    //Junit
    api "junit:junit:${TEST_JUNIT}"
    //Mockito
    api "org.mockito:mockito-core:${TEST_MOCKITO}"
    //Robolectric
    api "org.robolectric:robolectric:${TEST_ROBOLECTRIC}"
    //PowerMock
    api "org.powermock:powermock-api-mockito2:${TEST_POWER_MOCK}"
    api "org.powermock:powermock-module-junit4:${TEST_POWER_MOCK}"
    api "org.powermock:powermock-module-junit4-rule:${TEST_POWER_MOCK}"
    api "org.powermock:powermock-classloading-xstream:${TEST_POWER_MOCK}"
    //DaggerMock
    api "com.github.fabioCollini.daggermock:daggermock:${TEST_DEAAGE_MOCK}"
    //RestMock
    api "com.github.andrzejchm.RESTMock:android:${TEST_REST_MOCK}"
    //AssertJ
    api "org.assertj:assertj-core:${TEST_ASSERT_J}"
    //AssertJ-Android
    api "com.squareup.assertj:assertj-android:${TEST_ASSERT_J_ANDROID}"

    api "androidx.test:core:${TEST_X_CORE}"
    api "androidx.test:rules:${TEST_X_RULES}"
    api "androidx.test:runner:${TEST_X_RUNNER}"
    api "androidx.test.ext:junit:${TEST_X_JUNIT}"
    api "androidx.test.espresso:espresso-core:${TEST_X_ESPRESSO}"
    api "androidx.fragment:fragment-testing:${TEST_X_FRAGMENT}"
}
