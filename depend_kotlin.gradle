//Kotlin业务模块通用依赖

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-allopen"
apply plugin: 'kotlin-kapt'
apply from: rootProject.file('depend_common.gradle')

//指定会打开类的注解的列表
allOpen {
    annotation("com.huyingbao.core.annotations.AllOpen")
}
android {
    //Kotlin Java1.8支持
    kotlinOptions {
        jvmTarget = "1.8"
    }
    //Kotlin 实验功能
    androidExtensions {
        experimental = true
    }
}

dependencies {
    //通用库
    implementation project(':core-common')
    //编译时生成
    kapt "androidx.room:room-compiler:${X_ROOM}"
    kapt "androidx.lifecycle:lifecycle-compiler:${X_LIFECYCLE}"
    kapt "com.android.tools.build.jetifier:jetifier-core:${JETIFIER}"
    kapt "com.google.dagger:dagger-compiler:${DAGGER}"
    kapt "com.google.dagger:dagger-android-processor:${DAGGER}"
    kapt "com.alibaba:arouter-compiler:${AROUTER_COMPILER}"
    kapt "com.github.coolfire2015.RxFluxEventBus:core-eventbus-processor:${RX_FLUX_EVENTBUS}"
    kapt "com.github.coolfire2015.RxFluxArchitecture:core-arch-processor:${RX_FLUX_ARCHITECTURE}"
    //单元测试编译时生成
    kaptTest "androidx.room:room-compiler:${X_ROOM}"
    kaptTest "androidx.lifecycle:lifecycle-compiler:${X_LIFECYCLE}"
    kaptTest "com.android.tools.build.jetifier:jetifier-core:${JETIFIER}"
    kaptTest "com.google.dagger:dagger-compiler:${DAGGER}"
    kaptTest "com.google.dagger:dagger-android-processor:${DAGGER}"
    kaptTest "com.alibaba:arouter-compiler:${AROUTER_COMPILER}"
    kaptTest "com.github.coolfire2015.RxFluxEventBus:core-eventbus-processor:${RX_FLUX_EVENTBUS}"
    kaptTest "com.github.coolfire2015.RxFluxArchitecture:core-arch-processor:${RX_FLUX_ARCHITECTURE}"
}
